.TH  imgtool 1
.SH NAME
 imgtool - JPEG photo tool
.SH DESCRIPTION
Imgtool JPEG Photo tool

Renames, reorients, resizes and/or timestamps jpg files with a unique name based on EXIF tags embedded in 
the image files. File naming can be very complex using a variety of EXIF tags.

.SH WARNING
This tool is ALPHA. I have tested it in a limited environment and was written to work with my photographs. It may even be destructive. Backing up data is always a good idea before employing automatic tools that can recurse directories. If you break something, you own the remaining pieces.

.SH SYNOPSIS
imgtool [-h] [-R] [-c] [-d] [-f FORMAT] [-p Pattern] [-r] [-z GEOMETRY] [--help-geometry] [-v] [-V] [--dumpkeys] [PATH [PATH ...]]
.SH OPTIONS
.IP -h|--help
Show help text
.IP --help-geometry
Show help on resize geometry
.IP --help-format
Show help on automatic renaming format
.IP -R|--recurse
Recurse into subdirectories
.IP -c|--camera-names
Use embedded EXIF camera name to rename files
.IP -d|--dry-run
Show all actions to be performed without doing them. Also sets -v|--verbose
.IP -f|--format 
Time format string for filenaming in Python strftime format. Default is '@Exif.Image.Model[1]_%Y%m%d%H%M%S@File.ext'
.IP -p|--patern
Glob format pattern to search for files, e.g., *.jpg, default is *.[Jj][Pp][Gg]
(see glob(3) and fnmatch(3))
.IP -r|--auto-rotate
Automatically rotate image(s) based on EXIF Orientation tag. If not present, or set to 1 no rotation is performed
.IP -z|--resize 
Resize image(s) based on geometry. 
.IP -v|--verbose
Set verbose mode: Show operations as they are performed. If -d|--dry-run is also set, operations are shown without actually doing them.
.IP -V|--version
Show program version and exit.
.IP --dumpkeys
Dump the EXIF Tag Keys from first found file and exit.
.SH Resizing GEOMETRY
GEOMETRY is used with the -z or --resize options are used.

Geometry can be specified as a percentage of the overall image or as a pair of [width]x[height]. 
Width and height are specified in pixels. If width is specified but no height, e.g., 1000x
the image will be reized to a width of 1000px with a height calculated in relation to width to
maintain the image aspect ratio. Conversely, height is specified without a width, e.g., x1000
will resize the image to 1000px high with a width calculated to maintain the aspect ratio. 
When the width and height are spcecified no attempt to maintain the aspect ratio is made.
.SH Format options for filenames

Formatting filenames for automatic renaming is as follows:
    [@|+]type.Tag%timefmt

Tags starting with @ have their spaces replaced with periods (.), Tags starting with + 
do not have spaces replaced. There are two types of tags, File and Exif. File Tags are:

    File.Name:  Filename of the image without extension
    File.Ext:   Extension of filename, e.g., .JPG 
    File.ext:   Extension of filename converted to lower-case, e.g., .jpg
    File.Fullname: Full name of file with directories.
    File.mtime: String representation YYYYMMDDhhmmss of the file's timestamp in the filesystem.


EXIF Tags vary by image and camera. The program exiftool may be useful in finding appropriate tags. 
When specifying EXIF Tags, they are formatted as Exif.Image.Model which results in a string, for one 
of my cameras, as 'NIKON D3400', by default the resultant string will have spaced replaced with 
periods (.), to suppress this behavior, precede them with a plus (+). E.g.:

    @Exif.Image.Make returns 'NIKON.D3400' where +Exif.Image.Make returns 'NIKON D3400' 

This conversion is done just before substituting the tag with its value. 

### Splitting strings in tags
Splitting the tag values can be done as an index of space separated words or as a substring. 

.SH Indexing
To use an index, 
place the index number in brackets, e.g, @Exif.Image.Make[1] returns 'D3400' instead of 'NIKON D3400'. 
Index values start with 0. 

.SH Substrings
To use a substring, place the start and, optionally the length in parentheses. E.g,
@Exif.Image.Make(7,5) will return 'D3400' instead of 'NIKON D3400'. If the second value is omitted the 
length of the value, starting at the first number is presumed, so @Exif.Image.Make(7) will also result 
with 'D3400'

Any EXIF Tag present in the image EXIF header can be used to create all or part of a file name. For example, 
@Image.Make[1]_@File.name@File.ext will create, from DSC_328.JPG a name of 'D3400_DSC_328.jpg'.`


Note that the @File tags are never evaluated with a plus instead of an at-sign, and no indexing or substring
operations are performed.

.SH AUTHOR
Nicole Stevens (https://github.com/nicciniamh)
.SH Copyright
Copyright 2018 Nicole Stevens
.SH License
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

